{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifts.js","hooks/useFetchGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACH,mCACVC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACH,oCADG,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDC2BLO,EAzBM,SAACf,GAElB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAW,WACPpB,EAAQC,GACHoB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLX,KAAMc,EACNL,SAAS,MAEf,UAGX,CAAChB,IAEGiB,GCdIM,EATK,SAAC,GAAa,IAAXb,EAAU,EAAVA,IACnB,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAIR,IAAKwB,IAAKhB,EAAIE,QAC5B,4BAAIF,EAAIE,YCwBLe,EA1BC,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAEd,EAAiCe,EAAaf,GAAjCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QAErB,OACI,eAAC,WAAD,WACI,6BAAMhB,IAELgB,GAAW,cAEZ,qBAAKQ,UAAU,YAAf,SAGQX,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,CAEIA,IAAKA,GADAA,EAAIC,aCiBlBiB,EAjCM,WAGjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAOA,OAEI,eAAC,WAAD,WACI,8CACA,uBACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bca606ee.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n\r\n         if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories] );\r\n            setInputValue('');\r\n         }\r\n        \r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;","\r\nexport const getGifs = async(category) => {\r\n    const API_KEY = 'W6IIVQUmAJzstTOmtLG0ChNw0xeVj2G0';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API_KEY}`\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\nconst useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(()=> {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                },3000);    \r\n            })\r\n\r\n    }, [category]) \r\n\r\n    return state; \r\n}\r\n \r\nexport default useFetchGifs;","import React from 'react';\r\n\r\nconst GifGridItem = ( {img} ) => {\r\n    return (  \r\n        <div className=\"card\">\r\n            <img src={img.url} alt={img.title} />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default GifGridItem;","import React, {Fragment} from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h3>{ category }</h3>\r\n\r\n            {loading && 'cargando...' }\r\n           \r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        img={img}\r\n                    />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\nexport default GifGrid;","import React, {Fragment, useState} from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n   \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'HunterXHunter']);\r\n    //     setCategories(cats /*Callback del estado anterior*/ => [...cats, 'HunterXHunter'] /*Cambiando estado nuevo*/);\r\n    // }\r\n\r\n    return ( \r\n\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory \r\n                setCategories={setCategories}\r\n            />\r\n            <ol>\r\n                {\r\n                    categories.map( category =>  \r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n                \r\n            </ol>\r\n        </Fragment>   \r\n    );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}